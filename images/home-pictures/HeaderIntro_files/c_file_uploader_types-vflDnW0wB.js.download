define(["require","exports","./c_tslib","./e_edison","./e_core_exception","./e_ui_page_files_router","./c_core_exception_info"],(function(e,o,l,t,n,a,i){"use strict";const r=a.Loadable({loader:()=>new Promise((function(o,l){e(["./c_file_uploader_clean_uploader_main"],o,l)})).then((({FileUploaderFC:e})=>e)),loading:()=>null});let d=null,s=new Set;const p=()=>s=new Set;class c extends t.React$1.Component{constructor(e){super(e),this.hasLoadedCore=!1,this.handleAllFileUploadsComplete=e=>{this.props.onAllFileUploadsComplete&&this.props.onAllFileUploadsComplete(e)},this.props.loadOnRender&&c.requireFileUploader({actionElement:null,actionScreen:null}),d?n.reportStack("Only one FileUploader component may be rendered to the page at any time.You have tried to instantiate multiple uploaders.",{severity:i.SEVERITY.CRITICAL}):d=this,e.shouldInitialize&&c.initialized()}static requireFileUploader({handleUploadButtonClick:o,folderUpload:l,source:t,actionElement:n,actionScreen:a}){return new Promise((function(o,l){e(["./c_file_uploader_clean_actions"],o,l)})).then((function(e){return e.actions_esnext})).then((({UploaderActions:e})=>{var i;i="metaserver/static/js/file_uploader/clean/actions",s.add(i),this.reduxUploaderActions=e,d&&(d.hasLoadedCore=!0,c.onInitialized.then((()=>{o&&c.handleUploadButtonClick({folderUpload:!!l,source:t,actionElement:n,actionScreen:a})})))}))}componentDidUpdate(e){!e.shouldInitialize&&this.props.shouldInitialize&&c.initialized()}componentWillUnmount(){d=null,p()}static loadCoreComponent(){return l.__awaiter(this,void 0,void 0,(function*(){d&&d.hasLoadedCore||(yield c.requireFileUploader({actionElement:null,actionScreen:null}))}))}static isCoreComponentDefined(){return!(!d||!d.hasLoadedCore)}static setPathAndPermissions(e){var o;null===(o=null==c?void 0:c.reduxUploaderActions)||void 0===o||o.setPath(e)}static setPath(e){var o;null===(o=null==c?void 0:c.reduxUploaderActions)||void 0===o||o.setPath({path:e})}static handleUploadButtonClick({folderUpload:e,actionElement:o,source:l,onNextFileUploadComplete:t,actionScreen:n}){var a;d&&(d&&(null==c?void 0:c.reduxUploaderActions)?null===(a=null==c?void 0:c.reduxUploaderActions)||void 0===a||a.handleUploadButtonClick({folderUpload:e,uploadConsumerInterface:d.props.uploadConsumerInterface,actionElement:o,actionScreen:n,source:l,onNextFileUploadComplete:t}):c.requireFileUploader({handleUploadButtonClick:!0,folderUpload:e,source:l,actionElement:o,actionScreen:n}))}render(){const{autoTeamGroupId:e,isContentManager:o,getCMUriForFqPath:l,getBrowseContext:n,ajaxInterceptor:a,onFileUploadComplete:i,onModalDismissed:d,dragAndDropEnabled:s,shouldShowDestinationLink:p,uploaderPostTTIExperiments:c,chooseDestination:u,rootNSIDForCM:h,handleClickNewFolder:m,uploadConsumerInterface:U,shouldInitialize:C,isFirstTask:_,hideInlineSnackbar:F,createShortcutForGdssFile:f}=this.props;return C?t.React$1.createElement(r,{key:"file-uploader-redux",autoTeamGroupId:e,isContentManager:o,getCMUriForFqPath:l,getBrowseContext:n,ajaxInterceptor:a,onFileUploadComplete:i,onAllFileUploadsComplete:this.handleAllFileUploadsComplete,onModalDismissed:d,dragAndDropEnabled:s,shouldShowDestinationLink:p,uploaderPostTTIExperiments:c,createShortcutForGdssFile:f,chooseDestination:u,rootNSIDForCM:h,handleClickNewFolder:m,uploadConsumerInterface:U,isFirstTask:_,"data-testid":"file-uploader",hideInlineSnackbar:F}):null}}c.reduxUploaderActions=null,c.onInitialized=new Promise((e=>{c.initialized=()=>{e()}})),c.defaultProps={shouldInitialize:!0},c.displayName="FileUploaderController";var u,h,m=Object.freeze({__proto__:null,isModuleLoaded:e=>s.has(e),resetLoadedModules:p,FileUploaderController:c});o.UploadMethod=void 0,(u=o.UploadMethod||(o.UploadMethod={})).CHOOSER="chooser",u.DRAG="drag",o.UploadElement=void 0,(h=o.UploadElement||(o.UploadElement={})).DRAG_AND_DROP="drag_and_drop",h.ACTION_BAR="action_bar",h.UPLOAD_MODAL="upload_modal",o.FileUploaderController=c,o.file_uploader_esnext=m}));
//# sourceMappingURL=c_file_uploader_types.js-vflpkrspH.map
