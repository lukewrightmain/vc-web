define(["exports","./c_tslib","./e_edison","./c_browse_crypto_subtle_digest","./e_ui_page_files_router","./c_file_uploader_utils","./c_file_uploader_result_type","./c_api_v2_noauth_client","./c_core_uri","./c_file_uploader_actions_adapter","./c_csrf","./c_upload_kit_scheduler_types","./c_upload_kit_uploader_context","./c_upload_kit_lib_types","metaserver/static/js/modules/constants/global_file_upload","./c_data_store","./c_data_slice","./c_upload_kit_uploader_upload_abort_controller"],(function(e,t,s,r,i,o,n,a,l,u,d,h,c,p,m,f,y,_){"use strict";const R=4194304;function U(e){return new Promise((t=>{const s=new FileReader;s.onloadend=function(e){if(!(null!==e&&e.target&&e.target.result instanceof ArrayBuffer))throw new Error;t(e.target.result)},s.readAsArrayBuffer(e)}))}function g(e){return"locked_team"===e.error?o.UploadErrorType.LOCKED_TEAM_ERROR:o.UploadErrorType.OVER_QUOTA_ERROR}const E={".tag":"undefined_error"},C={".tag":"network_error"},k={".tag":"undefined_files_upload_error"};function S(e){const t={};return e.trim().split(/[\r\n]+/).forEach((e=>{const[s,r]=e.split(/: /);void 0!==s&&void 0!==r&&(t[s.trim()]=r.trim())})),t}class I{constructor({onProgress:e,abortSignal:t}){this.aborting=!1,this.onProgress=e,this.abortSignal=t}executeRpc(e,t,s,r){return l.incrementAjaxCount(),new Promise(((i,o)=>{var n;const l=new XMLHttpRequest;l.withCredentials=!0,null===(n=this.abortSignal)||void 0===n||n.then((()=>{this.aborting=!0,l.abort()})).catch((()=>{}));const u=()=>a.ApiError.parseResponse(l.status,S(l.getAllResponseHeaders()),l.responseText);l.onreadystatechange=()=>{if(l.readyState===XMLHttpRequest.DONE){if(0===l.status||200===l.status)return""===l.responseText?o(a.ApiError.parseResponse(0,{},this.aborting?"aborted":"")):i({headers:S(l.getAllResponseHeaders()),result:JSON.parse(l.responseText)});o(u())}},l.onerror=()=>{o(u())},l.upload&&void 0!==this.onProgress&&(l.upload.onprogress=this.onProgress),l.onload=()=>{l.status>=400&&o(u())},l.open("POST",e.toString(),!0);for(const[e,s]of Object.entries(t))l.setRequestHeader(e,s);l.setRequestHeader("Content-Type",r),l.send(s)})).finally(l.decrementAjaxCount)}executeBinaryRpc(e,t,s,r){return(new a.FetchAsyncTransport).executeBinaryRpc(e,t,s,r)}}function b(e,s,r,o,a){var l;return t.__awaiter(this,void 0,void 0,(function*(){const t=new i.UserApiV2Client(new I({onProgress:o,abortSignal:a}));try{const i=yield U(s),o=yield t.ns("files").upload("upload_session/append_v2",e,i,{subjectUserId:r});return n.ok(o)}catch(e){return void 0!==(null===(l=e.error)||void 0===l?void 0:l[".tag"])?n.error(e.error,e.raw.status):"aborted"===e.raw.responseBody?n.ok(void 0):0===e.raw.status?n.error(C,0,{isRetriable:!0,maxRetries:1/0,isNetworkError:!0}):n.error(E,e.raw.status)}}))}function v(e,s){return t.__awaiter(this,void 0,void 0,(function*(){const t=new i.UserApiV2Client;try{const r=yield t.ns("files").rpc("upload_session/finish_batch_v2",e,{subjectUserId:s});return n.ok(r)}catch(e){return 0===e.raw.status?n.error(C,0,{isRetriable:!0,maxRetries:1/0,isNetworkError:!0}):n.error(E,e.raw.status)}}))}function P(e,s){var r;return t.__awaiter(this,void 0,void 0,(function*(){const t=new i.UserApiV2Client;try{const r=yield t.ns("files").rpc("upload_session/start_batch",e,{subjectUserId:s});return n.ok(r)}catch(e){return void 0!==(null===(r=null==e?void 0:e.error)||void 0===r?void 0:r[".tag"])?n.error(e.error,e.raw.status):0===e.raw.status?n.error(C,0,{isRetriable:!0,maxRetries:1/0,isNetworkError:!0}):n.error(E,e.raw.status)}}))}const T={".tag":"concurrent"},A=1e3;function w(e,s){return t.__awaiter(this,void 0,void 0,(function*(){const t=[];for(;e>A;){const r=P({num_sessions:A,session_type:T},s);t.push(r),e-=A}const r=P({num_sessions:e,session_type:T},s);t.push(r);const i=yield Promise.all(t);let o=[];for(const e of i){if(e.isError)return e;o=o.concat(e.result.session_ids)}return n.ok(o)}))}function O(e,t,s,r,i,a,u){return new Promise(((h,c)=>{try{const c={_subject_uid:e.toString(),dest:t,name:s,overwrite:"1",reported_total_size:r.toString(),t:d.readCsrfToken()||"",client_root_ns_id:a.toString()};u>0&&(c.last_modified=u.toString());const p=new l.URI({scheme:"https",authority:"www.dropbox.com",path:"/commit_web_upload_by_token",query:c}),m=new XMLHttpRequest;m.withCredentials=!0;const f=()=>{let e;return e=507===m.status?g(m):0===m.status?o.UploadErrorType.CONNECTION_ERROR:o.UploadErrorType.COMMIT_HTTP_ERROR,{type:e}};return m.onreadystatechange=()=>{if(m.readyState===XMLHttpRequest.DONE)if(200===m.status){const e=JSON.parse(m.responseText);"complete"===e.status?h(n.ok({})):h(n.error({type:o.UploadErrorType.HTTP_ERROR,message:e.error,method:"commitBlocks/request.onreadystatechange"},m.status))}else{const e=f().type===o.UploadErrorType.CONNECTION_ERROR,t=e?1/0:3;h(n.error(f(),m.status,{isRetriable:!0,maxRetries:t,isNetworkError:e}))}},m.open("POST",p.toString(),!0),m.setRequestHeader("Content-Type","application/octet-stream"),m.send(JSON.stringify(i)),m}catch(e){return void h(n.error({type:o.UploadErrorType.HTTP_ERROR,message:e.message,method:"commitBlocks/try-catch"},e.raw.status))}}))}function B(e,t,s){return new Promise(((r,a)=>{const l={};s.map((e=>{l[e.id]=e}));const u=[];(function(e,t){const s={entries:t};return(new i.UserApiV2Client).ns("upload_backend").rpc("commit_web_upload_token_batch",s,{subjectUserId:e})})(e,t).then((e=>{var t,s;null===(t=e.completed)||void 0===t||t.forEach((e=>{u.push({uploadItem:l[e.local_identifier],status:{isError:!1}})})),null===(s=e.failed)||void 0===s||s.forEach((e=>{const t=e.status.status;let s=o.UploadErrorType.COMMIT_HTTP_ERROR;if("failure"===t[".tag"]){s=function(e){var t;switch(null===(t=e.failure_reason)||void 0===t?void 0:t[".tag"]){case"invalid_argument":return o.UploadErrorType.COMMIT_INVALID_ARGS;case"too_large_file":case"too_many_blocks":return o.UploadErrorType.FILE_SIZE_ERROR;case"no_write_permission":return o.UploadErrorType.PERMISSIONS_AT_UPLOAD_ERROR;case"insufficient_quota":return o.UploadErrorType.OVER_QUOTA_ERROR;case"file_ignored":return o.UploadErrorType.IGNORED;default:return o.UploadErrorType.COMMIT_HTTP_ERROR}}(t)}u.push({uploadItem:l[e.local_identifier],status:{isError:!0,error:{type:s,method:"commitWebUploadTokenBatch"}}})})),r(n.ok(u))})).catch((e=>{var t,s,i;0!==(null===(t=e.raw)||void 0===t?void 0:t.status)?r(n.error({type:o.UploadErrorType.HTTP_ERROR,message:e.toString(),method:"commitWebUploadTokenBatch/try-catch"},null!==(i=null===(s=e.raw)||void 0===s?void 0:s.status)&&void 0!==i?i:0)):r(n.error({type:o.UploadErrorType.CONNECTION_ERROR,message:e.toString(),method:"commitWebUploadTokenBatch/try-catch"},0,{isRetriable:!0,maxRetries:1/0,isNetworkError:!0}))}))}))}const F=(e,s,i,a,u)=>new Promise((h=>t.__awaiter(void 0,void 0,void 0,(function*(){var c,p;try{let c;if(r.windowHasCryptoSubtleDigest()){const e=yield function(e){return t.__awaiter(this,void 0,void 0,(function*(){let t;try{t=yield U(e)}catch(e){return n.error({type:o.UploadErrorType.FILE_READER_NULL_RESULT_ERROR},0)}try{const e=yield r.encryptArrayBuffer(t),s=function(e){for(;e.endsWith("=");)e=e.slice(0,-1);return e}(btoa(String.fromCharCode.apply(null,new Uint8Array(e))).replace(/\//g,"_").replace(/\+/g,"-"));return s?n.ok({hash:s}):n.error({type:o.UploadErrorType.CLIENT_HASH_EMPTY_ERROR},0)}catch(e){return n.error({type:o.UploadErrorType.CLIENT_HASH_DIGEST_ERROR},0)}}))}(a);if(e.isError)return h(e);c=e.result.hash}const p=new l.URI({scheme:"https",authority:"dl-web.dropbox.com",path:"/put_block_returning_token",query:{owner_id:e.toString(),_subject_uid:e.toString(),t:d.readCsrfToken()||"",reported_block_size:a.size.toString(),num_blocks:Math.ceil(i/a.size).toString(),ns_id_for_routing:s.toString()}}),m=new XMLHttpRequest;m.withCredentials=!0;const f=()=>{let e;return e=507===m.status?g(m):0===m.status?o.UploadErrorType.CONNECTION_ERROR:o.UploadErrorType.UPLOAD_BLOCK_ERROR,{type:e}};return m.onreadystatechange=()=>{if(m.readyState!==XMLHttpRequest.DONE)return;if(0!==m.status&&200!==m.status)return h(n.error({type:o.UploadErrorType.HTTP_ERROR,message:`request status was ${m.status}`,method:"uploadBlock/request.onreadystatechange"},m.status));const e=JSON.parse(m.responseText);return e.token?r.windowHasCryptoSubtleDigest()&&e.block_hash!==c?h(n.error({type:o.UploadErrorType.HASHES_NOT_EQUAL_ERROR},0)):void h(n.ok({token:e.token})):h(n.error({type:o.UploadErrorType.HTTP_ERROR,message:`no token in response, block hash:${e.block_hash}, request status:${m.status}`,method:"uploadBlock/request.onreadystatechange"},0))},m.onerror=()=>{const e=f();e.type!==o.UploadErrorType.CONNECTION_ERROR?h(n.error(e,0)):h(n.error(e,0,{isRetriable:!0,maxRetries:1/0,isNetworkError:!0}))},m.upload&&(m.upload.onprogress=u),m.onload=()=>{m.status>=400&&h(n.error(f(),m.status))},m.open("POST",p.toString(),!0),m.setRequestHeader("Content-Type","application/octet-stream"),m.send(a),m}catch(e){return void h(n.error({type:o.UploadErrorType.HTTP_ERROR,message:e.message,method:"uploadBlock/try-catch"},null!==(p=null===(c=e.raw)||void 0===c?void 0:c.status)&&void 0!==p?p:0))}})))),x=e=>{var t;if(!(e.file&&e.file instanceof File))return 0;const s=Date.now()+864e5,r=null!==(t=e.file.lastModified)&&void 0!==t?t:0;return r.toString().length>=12&&r<s?Math.round(r/1e3):0},q=4194304;class N extends h.UploadScheduler{constructor(e){super(e),this.itemQueue=new Map,this.commitQueue=[],this.availableBlockRequests=8,this.availableCommitRequests=1,this.onCompleteSubscribers=[],this.handleUploadBlocks=e.handleUploadBlocks,this.handleCommitBlocks=e.handleCommitBlocks,this.handleProgress=e.handleProgress,this.handleItemExit=e.handleItemExit,this.handleItemDequeue=e.handleItemDequeue}itemExit(e,t){const s=this.itemQueue.get(e);s&&(s.status=t,this.itemQueue.delete(e),this.handleItemExit(s.info,t))}dispenseChunkData(){if(!this.currentFileChunkReader||this.currentFileChunkReader.isEmpty()||!this.isItemUploading(this.currentFileChunkReader.item.destPath)){const e=Array.from(this.itemQueue.values()).find((e=>"Queued"===e.status&&e.file.size>0));if(!e)return null;this.handleItemDequeue&&this.handleItemDequeue(e.info),this.currentFileChunkReader=new D(e),e.status=h.UploadSchedulerStatus.Uploading}const e=this.currentFileChunkReader.getNextChunk();if(!e)return null;const t=this.currentFileChunkReader.item,s=t.blockTokens.length;return t.blockTokens.push(""),{item:t,chunk:e,blockIndex:s}}commitNext(){return t.__awaiter(this,void 0,void 0,(function*(){if(0===this.availableCommitRequests)return;if(0===this.commitQueue.length)return void(this.isUploading()||this.fireComplete());this.availableCommitRequests--;const e=[],t=[];let s=100;for(;s>0&&this.commitQueue.length>0;){const r=this.commitQueue.shift(),i=this.itemQueue.get(r);if(!i)continue;const{info:o,blockTokens:n,destPath:a}=i;e.push({info:o,tokens:n}),t.push(a),s--}try{(yield this.handleCommitBlocks(e)).forEach((e=>{this.itemExit(e.filePath,e.success?h.UploadSchedulerStatus.Completed:h.UploadSchedulerStatus.Error)}))}catch(e){t.forEach((e=>{this.itemExit(e,h.UploadSchedulerStatus.Error)}))}this.availableCommitRequests++,this.commitNext()}))}queueCommit(e){this.commitQueue.push(e),this.commitNext()}uploadNextBlock(){return t.__awaiter(this,void 0,void 0,(function*(){if(this.availableBlockRequests<=0)return;const e=this.dispenseChunkData();if(!e)return void(this.isUploading()||this.fireComplete());const{item:t,chunk:s,blockIndex:r}=e;let i=0;const o=e=>{if(this.isItemUploading(t.destPath)){const r=Math.min(s.size,t.file.size),o=Math.min(e,r),n=Math.max(o-i,0);i+=n;const a=Math.min(t.totalBytesUploaded+n,t.file.size);t.totalBytesUploaded=a,this.handleProgress(t.info,a)}};this.availableBlockRequests--;try{const e=yield this.handleUploadBlocks(t.info,s,o);this.isItemUploading(t.destPath)&&(o(s.size),t.blockTokens[r]=e,this.isReadyForCommit(t.destPath)&&(t.status=h.UploadSchedulerStatus.Committing,this.queueCommit(t.destPath)))}catch(e){this.itemExit(t.destPath,h.UploadSchedulerStatus.Error)}this.availableBlockRequests++,this.uploadNextBlock()}))}isReadyForCommit(e){const t=this.itemQueue.get(e);if(!t)return!1;const{blockTokens:s,file:r}=t;if(s.every((e=>""!==e))){const e=Math.ceil(r.size/q);return s.length===e}return!1}addFile(e,s,r){return t.__awaiter(this,void 0,void 0,(function*(){this.itemQueue.set(s,{file:e,destPath:s,status:h.UploadSchedulerStatus.Queued,bytesUploaded:0,info:r,blockTokens:[],totalBytesUploaded:0}),this.isUploading()&&this.startUploading()}))}startUploading(){return t.__awaiter(this,void 0,void 0,(function*(){const e=this.onComplete(),t=this.availableBlockRequests;for(let e=0;e<t;e++)this.uploadNextBlock();return e}))}cancelFile(e){return t.__awaiter(this,void 0,void 0,(function*(){this.itemQueue.get(e)&&!this.isReadyForCommit(e)&&this.itemExit(e,h.UploadSchedulerStatus.Stopped)}))}stopUploading(){this.itemQueue.forEach((({destPath:e})=>{this.cancelFile(e)}))}isQueueEmpty(){return 0===this.itemQueue.size}isItemUploading(e){const t=this.itemQueue.get(e);return Boolean(t&&"Uploading"===t.status)}isUploading(){return this.availableBlockRequests<8||this.availableCommitRequests<1}fireComplete(){for(;this.onCompleteSubscribers.length>0;){const e=this.onCompleteSubscribers.shift();e&&e()}}onComplete(){return new Promise((e=>{this.onCompleteSubscribers.push(e)}))}}class D{constructor(e){this.currentOffset=0,this.item=e}getNextChunk(){if(this.isEmpty())return null;const e=this.item.file.slice(this.currentOffset,q+this.currentOffset);return this.currentOffset+=q,e}isEmpty(){return this.item.file.size<=this.currentOffset}}h.UploadSessionScheduler;const Q=4194304;class M extends h.UploadHybridScheduler{constructor(e){super(e),this.itemQueue=new Map,this.commitQueue=[],this.availableBlockRequests=6,this.availableFinishRequests=1,this.onCompleteSubscribers=[],this.handleUploadBlocks=e.handleUploadBlocks,this.handleCommitBlocks=e.handleCommitBlocks,this.handleAppend=e.handleAppend,this.handleFinish=e.handleFinish,this.handleProgress=e.handleProgress,this.handleItemExit=e.handleItemExit,this.currentItemState=null,this.handleItemDequeue=e.handleItemDequeue}itemExit(e,t){const s=this.itemQueue.get(e);s&&(s.status=t,this.itemQueue.delete(e),this.handleItemExit(s.info,t))}dispenseChunkData(){if(null===this.currentItemState||this.currentItemState.fileChunkReader.isEmpty()||!this.isItemUploading(this.currentItemState.item.destPath)){const e=Array.from(this.itemQueue.values()).find((e=>"Queued"===e.status&&e.file.size>0));if(!e)return null;this.handleItemDequeue&&this.handleItemDequeue(e.info);const t=o.shouldUseSessionUploadForFile(e.file.size)?4:1;this.currentItemState={item:e,fileChunkReader:new z(e.file,t)},e.status=h.UploadSchedulerStatus.Uploading}const e=this.currentItemState.fileChunkReader.getNextChunks();if(!e)return null;const t=this.currentItemState.item,s=t.blockIndex;return t.blockIndex+=Math.ceil(e.size/Q),{item:t,chunk:e,blockIndex:s}}commitLegacyItems(e){return t.__awaiter(this,void 0,void 0,(function*(){const t=[],s=[];e.forEach((e=>{const{info:r,destPath:i,blockTokens:o}=e;o&&t.push({info:r,tokens:o}),s.push(i)}));try{(yield this.handleCommitBlocks(t)).forEach((e=>{this.itemExit(e.filePath,e.success?h.UploadSchedulerStatus.Completed:h.UploadSchedulerStatus.Error)}))}catch(e){s.forEach((e=>{this.itemExit(e,h.UploadSchedulerStatus.Error)}))}}))}finishApiV2Items(e){return t.__awaiter(this,void 0,void 0,(function*(){const t=[],s=[];e.forEach((e=>{const{info:r,destPath:i}=e;t.push({info:r}),s.push(i)}));try{(yield this.handleFinish(t)).forEach((e=>{this.itemExit(e.filePath,e.success?h.UploadSchedulerStatus.Completed:h.UploadSchedulerStatus.Error)}))}catch(e){s.forEach((e=>{this.itemExit(e,h.UploadSchedulerStatus.Error)}))}}))}commitNext(){return t.__awaiter(this,void 0,void 0,(function*(){if(0===this.availableFinishRequests)return;if(0===this.commitQueue.length)return void(this.isUploading()||this.fireComplete());this.availableFinishRequests--;const e=[];this.commitQueue.forEach((t=>{const s=this.itemQueue.get(t);s&&e.push(s)}));const t=e.filter((e=>!o.shouldUseSessionUploadForFile(e.file.size))).slice(0,100),s=e.filter((e=>o.shouldUseSessionUploadForFile(e.file.size))).slice(0,1e3);t.forEach((e=>{const t=this.commitQueue.indexOf(e.destPath);this.commitQueue.splice(t,1)})),s.forEach((e=>{const t=this.commitQueue.indexOf(e.destPath);this.commitQueue.splice(t,1)}));const r=t.length>0?this.commitLegacyItems(t):void 0,i=s.length>0?this.finishApiV2Items(s):void 0;yield Promise.all([r,i]),this.availableFinishRequests++,this.commitNext()}))}queueCommit(e){this.commitQueue.push(e),this.commitNext()}uploadNextBlock(){return t.__awaiter(this,void 0,void 0,(function*(){if(this.availableBlockRequests<=0)return;const e=this.dispenseChunkData();if(!e)return void(this.isUploading()||this.fireComplete());const{item:t,chunk:s,blockIndex:r}=e;let i=0;const n=e=>{if(this.isItemUploading(t.destPath)){const r=Math.min(s.size,t.file.size),o=Math.min(e,r),n=Math.max(o-i,0);i+=n;const a=Math.min(t.visualBytesUploaded+n,t.file.size);t.visualBytesUploaded=a,this.handleProgress(t.info,a)}};this.availableBlockRequests--;try{let e;o.shouldUseSessionUploadForFile(t.file.size)?yield this.handleAppend(t.info,s,r,n):e=yield this.handleUploadBlocks(t.info,s,n),t.confirmedBytesUploaded+=s.size,this.isItemUploading(t.destPath)&&(e&&t.blockTokens&&(t.blockTokens[r]=e),this.isFileReadyForCommit(t.destPath)&&(t.status=h.UploadSchedulerStatus.Committing,this.queueCommit(t.destPath)))}catch(e){this.itemExit(t.destPath,h.UploadSchedulerStatus.Error)}this.availableBlockRequests++,this.uploadNextBlock()}))}isFileReadyForCommit(e){const t=this.itemQueue.get(e);if(!t)return!1;const{confirmedBytesUploaded:s,file:r}=t;return s>=r.size}addFile(e,s,r){return t.__awaiter(this,void 0,void 0,(function*(){this.itemQueue.set(s,{file:e,destPath:s,status:h.UploadSchedulerStatus.Queued,bytesUploaded:0,info:r,visualBytesUploaded:0,confirmedBytesUploaded:0,blockIndex:0,blockTokens:[]}),this.isUploading()&&this.startUploading()}))}startUploading(){return t.__awaiter(this,void 0,void 0,(function*(){const e=this.onComplete(),t=this.availableBlockRequests;for(let e=0;e<t;e++)this.uploadNextBlock();return e}))}cancelFile(e,s=!1){return t.__awaiter(this,void 0,void 0,(function*(){this.itemQueue.get(e)&&!this.isFileReadyForCommit(e)&&this.itemExit(e,s?h.UploadSchedulerStatus.Stopped:h.UploadSchedulerStatus.Cancelled)}))}stopUploading(){this.itemQueue.forEach((({destPath:e})=>{this.cancelFile(e,!0)}))}isQueueEmpty(){return 0===this.itemQueue.size}isItemUploading(e){const t=this.itemQueue.get(e);return Boolean(t&&"Uploading"===t.status)}isUploading(){return this.availableBlockRequests<6||this.availableFinishRequests<1}fireComplete(){for(;this.onCompleteSubscribers.length>0;){const e=this.onCompleteSubscribers.shift();e&&e()}}onComplete(){return new Promise((e=>{this.onCompleteSubscribers.push(e)}))}}class z{constructor(e,t){this.currentOffset=0,this.file=e,this.chunkCount=t}getNextChunks(){const e=this.file.size-this.currentOffset;if(e<=0)return null;const t=Math.floor(e/Q);let s;s=t<1?e:t<this.chunkCount?t*Q:this.chunkCount*Q;const r=this.file.slice(this.currentOffset,s+this.currentOffset);return this.currentOffset+=s,r}isEmpty(){return this.file.size<=this.currentOffset}}const H=4194304;class L extends h.UploadHybridScheduler{constructor(e){super(e),this.itemQueue=new Map,this.commitQueue=[],this.availableBlockRequests=6,this.availableFinishRequests=1,this.onCompleteSubscribers=[],this.handleUploadBlocks=e.handleUploadBlocks,this.handleCommitBlocks=e.handleCommitBlocks,this.handleAppend=e.handleAppend,this.handleFinish=e.handleFinish,this.handleProgress=e.handleProgress,this.handleItemExit=e.handleItemExit,this.currentItemState=null,this.handleItemDequeue=e.handleItemDequeue}itemExit(e,t){const s=this.itemQueue.get(e);s&&(s.status=t,this.itemQueue.delete(e),this.handleItemExit(s.info,t))}dispenseChunkData(){if(null===this.currentItemState||this.currentItemState.fileChunkReader.isEmpty()||!this.isItemUploading(this.currentItemState.item.destPath)){const e=Array.from(this.itemQueue.values()).find((e=>"Queued"===e.status&&e.file.size>0));if(!e)return null;this.handleItemDequeue&&this.handleItemDequeue(e.info),this.currentItemState={item:e,fileChunkReader:new W(e.file,4)},e.status=h.UploadSchedulerStatus.Uploading}let e;if(e=o.shouldUseSessionUploadForFile(this.currentItemState.item.file.size)?this.currentItemState.fileChunkReader.getNextChunks():this.currentItemState.fileChunkReader.getFileChunk(),!e)return null;const t=this.currentItemState.item,s=t.blockIndex;return t.blockIndex+=Math.ceil(e.size/H),{item:t,chunk:e,blockIndex:s}}finishOneShotUploadItems(e){const t=e.map((e=>{const{info:t}=e;return{info:t,tokens:["unused"]}}));this.handleCommitBlocks(t),e.forEach((e=>{const{destPath:t}=e;this.itemExit(t,h.UploadSchedulerStatus.Completed)}))}finishSessionUploadItems(e){return t.__awaiter(this,void 0,void 0,(function*(){const t=[],s=[];e.forEach((e=>{const{info:r,destPath:i}=e;t.push({info:r}),s.push(i)}));try{(yield this.handleFinish(t)).forEach((e=>{this.itemExit(e.filePath,e.success?h.UploadSchedulerStatus.Completed:h.UploadSchedulerStatus.Error)}))}catch(e){s.forEach((e=>{this.itemExit(e,h.UploadSchedulerStatus.Error)}))}}))}commitNext(){return t.__awaiter(this,void 0,void 0,(function*(){if(0===this.availableFinishRequests)return;if(0===this.commitQueue.length)return void(this.isUploading()||this.fireComplete());this.availableFinishRequests--;const e=[];this.commitQueue.forEach((t=>{const s=this.itemQueue.get(t);s&&e.push(s)}));const t=e.filter((e=>!o.shouldUseSessionUploadForFile(e.file.size))),s=e.filter((e=>o.shouldUseSessionUploadForFile(e.file.size))).slice(0,1e3);t.forEach((e=>{const t=this.commitQueue.indexOf(e.destPath);this.commitQueue.splice(t,1)})),s.forEach((e=>{const t=this.commitQueue.indexOf(e.destPath);this.commitQueue.splice(t,1)})),t.length&&this.finishOneShotUploadItems(t),s.length&&(yield this.finishSessionUploadItems(s)),this.availableFinishRequests++,this.commitNext()}))}queueCommit(e){this.commitQueue.push(e),this.commitNext()}uploadNextBlock(){return t.__awaiter(this,void 0,void 0,(function*(){if(this.availableBlockRequests<=0)return;const e=this.dispenseChunkData();if(!e)return void(this.isUploading()||this.fireComplete());const{item:t,chunk:s,blockIndex:r}=e;let i=0;const n=e=>{if(this.isItemUploading(t.destPath)){const r=Math.min(s.size,t.file.size),o=Math.min(e,r),n=Math.max(o-i,0);i+=n;const a=Math.min(t.visualBytesUploaded+n,t.file.size);t.visualBytesUploaded=a,this.handleProgress(t.info,a)}};this.availableBlockRequests--;try{o.shouldUseSessionUploadForFile(t.file.size)?yield this.handleAppend(t.info,s,r,n):yield this.handleUploadBlocks(t.info,s,n),t.confirmedBytesUploaded+=s.size,this.isItemUploading(t.destPath)&&this.isFileReadyForCommit(t.destPath)&&(t.status=h.UploadSchedulerStatus.Committing,this.queueCommit(t.destPath))}catch(e){this.itemExit(t.destPath,h.UploadSchedulerStatus.Error)}this.availableBlockRequests++,this.uploadNextBlock()}))}isFileReadyForCommit(e){const t=this.itemQueue.get(e);if(!t)return!1;const{confirmedBytesUploaded:s,file:r}=t;return s>=r.size}addFile(e,s,r){return t.__awaiter(this,void 0,void 0,(function*(){this.itemQueue.set(s,{file:e,destPath:s,status:h.UploadSchedulerStatus.Queued,bytesUploaded:0,info:r,visualBytesUploaded:0,confirmedBytesUploaded:0,blockIndex:0}),this.isUploading()&&this.startUploading()}))}startUploading(){return t.__awaiter(this,void 0,void 0,(function*(){const e=this.onComplete(),t=this.availableBlockRequests;for(let e=0;e<t;e++)this.uploadNextBlock();return e}))}cancelFile(e,s=!1){return t.__awaiter(this,void 0,void 0,(function*(){this.itemQueue.get(e)&&!this.isFileReadyForCommit(e)&&this.itemExit(e,s?h.UploadSchedulerStatus.Stopped:h.UploadSchedulerStatus.Cancelled)}))}stopUploading(){this.itemQueue.forEach((({destPath:e})=>{this.cancelFile(e,!0)}))}isQueueEmpty(){return 0===this.itemQueue.size}isItemUploading(e){const t=this.itemQueue.get(e);return Boolean(t&&"Uploading"===t.status)}isUploading(){return this.availableBlockRequests<6||this.availableFinishRequests<1}fireComplete(){for(;this.onCompleteSubscribers.length>0;){const e=this.onCompleteSubscribers.shift();e&&e()}}onComplete(){return new Promise((e=>{this.onCompleteSubscribers.push(e)}))}}class W{constructor(e,t){this.currentOffset=0,this.file=e,this.chunkCount=t}getNextChunks(){const e=this.file.size-this.currentOffset;if(e<=0)return null;const t=Math.floor(e/H);let s;s=t<1?e:t<this.chunkCount?t*H:this.chunkCount*H;const r=this.file.slice(this.currentOffset,s+this.currentOffset);return this.currentOffset+=s,r}getFileChunk(){const e=this.file.size-this.currentOffset;if(e<=0)return null;const t=this.file.slice(0,e);return this.currentOffset=e,t}isEmpty(){return this.file.size<=this.currentOffset}}function V(e,s){return t.__awaiter(this,void 0,void 0,(function*(){return e=c.resolveDuplicates(e),yield function(e,s){return t.__awaiter(this,void 0,void 0,(function*(){e.length&&(yield o.showInvalidFileWarning(e.map((({item:e,error:t})=>({name:i.filename(e.destPath),validationError:t}))),s))}))}(s,0===e.length),function(e){t.__awaiter(this,void 0,void 0,(function*(){e.forEach((e=>{e.file instanceof File&&!p.isChooserFile(e.file)&&!p.isWebkitFile(e.file)&&(e.file.webkitRelativePath="/")}))}))}(e),e}))}const j=4194304;class Y extends s.React$1.Component{constructor(){super(...arguments),this.allProcessedFiles=[],this.dequeuedItemIds=new Set,this.onBeforeUpload=e=>new Promise((t=>{u.ActionsAdapter.emit("beforeUpload",{uploadItems:e,beforeUploadComplete:({items:e})=>{t(e)}})})),this.onFilesAdded=(e,t)=>new Promise((s=>{u.ActionsAdapter.emit("filesAdded",{uploadItems:e,allUploadItems:t,filesAddedComplete:s,chooseDestination:this.props.chooseDestination,actionScreen:this.props.actionScreen})})),this.processFiles=(e,s)=>t.__awaiter(this,void 0,void 0,(function*(){let r,i;s.forEach((({item:e,error:t})=>{u.ActionsAdapter.emit("error",{user:this.props.user,uploadItem:e,errorCode:0,errorType:u.convertValidationError(t),loggingOnly:!0})}));try{r=this.props.processFiles?yield this.props.processFiles(e,s):yield V(e,s)}catch(e){r=[]}const n=o.shouldUseHybridUploader()&&r.some((e=>o.shouldUseSessionUploadForFile(e.bytes)));if(n&&(i=function(e,s){return t.__awaiter(this,void 0,void 0,(function*(){if(m.UPLOAD_AUTORETRY_OPTIMIZATION){const{response:t}=yield o.newPromiseWithRetries({promiseToTry:()=>w(s.length,e)});return t}{const{response:t}=yield o.legacyPromiseWithRetries((()=>w(s.length,e)),3);return t}}))}(this.props.user.id,r)),this.allProcessedFiles=[...this.allProcessedFiles,...r],r=yield this.onFilesAdded(r,this.allProcessedFiles),r=yield this.onBeforeUpload(r),this.allProcessedFiles=[],n&&i){const e=yield i;if(e.isError)r.forEach((t=>{u.ActionsAdapter.emit("error",{user:this.props.user,uploadItem:t,errorCode:e.errorCode,errorType:o.UploadErrorType.START_UPLOAD_SESSION_ERROR,errorMessage:e.error[".tag"]})}));else{const t=e.result;r.forEach(((e,s)=>{e.cursor={session_id:t[s],offset:0}}))}}return{items:r,errors:s}})),this.onUploadItemDequeue=e=>{this.dequeuedItemIds.has(e.id)||(this.dequeuedItemIds.add(e.id),u.ActionsAdapter.emit("uploadItemDequeue",{uploadItem:e}))},this.nsIdForRouting=e=>{if(this.props.nsIdForRouting)return this.props.nsIdForRouting(e);const t=f.getStoreForUpload().getState(),s=y.getPath(t),r=y.getFolderNsId(t);return""===i.normalize(s)?this.props.user.root_ns_id:null!==r?r:this.props.user.root_ns_id},this.appendBlock=(e,s,i,a)=>t.__awaiter(this,void 0,void 0,(function*(){if(!e.cursor||void 0===i)throw u.ActionsAdapter.emit("error",{uploadItem:e,errorCode:0,errorType:o.UploadErrorType.APPEND_BLOCK_MISSING_PARAMS,user:this.props.user}),new Error;let l;if(u.ActionsAdapter.emit("blockUploadStart",{blob:s,uploadItem:e}),r.windowHasCryptoSubtleDigest()){const i=yield function(e,s){return t.__awaiter(this,void 0,void 0,(function*(){let t;try{t=yield U(e)}catch(e){return n.error({type:o.UploadErrorType.FILE_READER_NULL_RESULT_ERROR},0)}const r=[];for(let e=0,s=0;e<t.byteLength;e+=R,s++)r[s]=t.slice(e,e+R);try{const e=yield Promise.all(r.map(s)),t=new Blob(e),i=yield U(t),o=yield s(i),a=Array.from(new Uint8Array(o)).map((e=>e.toString(16).padStart(2,"0"))).join("");return n.ok({hash:a})}catch(e){return n.error({type:o.UploadErrorType.CLIENT_HASH_DIGEST_ERROR},0)}}))}(s,r.encryptArrayBuffer);i.isError?u.ActionsAdapter.emit("error",{uploadItem:e,errorCode:0,errorType:o.UploadErrorType.CLIENT_HASH_DIGEST_ERROR,user:this.props.user}):l=i.result.hash}const d=Date.now(),h=t=>{a(t.loaded),u.ActionsAdapter.emit("uploadProgress",{uploadItem:e,requestStartTimestamp:d})},c=i*j+s.size>=e.bytes,p={cursor:{session_id:e.cursor.session_id,offset:i*j},close:c,content_hash:l};let f,y=0;const g=_.getUploadAbortController(),E=g.getAbortSignal(e);if(m.UPLOAD_AUTORETRY_OPTIMIZATION){const{response:e,retryCount:t}=yield o.newPromiseWithRetries({promiseToTry:()=>b(p,s,this.props.user.id,h,E)});y+=t,f=e}else{const{response:e,retryCount:t}=yield o.legacyPromiseWithRetries((()=>b(p,s,this.props.user.id,h,E)),3);y+=t,f=e}if(f.isError)throw u.ActionsAdapter.emit("error",{uploadItem:e,errorType:u.convertApiV2LookupAndAppendErrors(f.error,o.UploadErrorType.UPLOAD_BLOCK_ERROR),user:this.props.user,totalRetryCount:y,errorMessage:f.error[".tag"],errorCode:f.errorCode}),new Error;g.wasUploadAborted(e.destPath)||(u.ActionsAdapter.emit("uploadProgress",{uploadItem:e,requestStartTimestamp:d}),u.ActionsAdapter.emit("blockUploadEnd",{blob:s,totalRetryCount:y,uploadItem:e}))})),this.uploadBlock=(e,s,r,i)=>t.__awaiter(this,void 0,void 0,(function*(){const t=Date.now(),i=e.manualRetryCount,n=s=>{r&&r(s.loaded),e.manualRetryCount===i&&u.ActionsAdapter.emit("uploadProgress",{uploadItem:e,requestStartTimestamp:t})};u.ActionsAdapter.emit("blockUploadStart",{blob:s,uploadItem:e});let a,l=0;if(m.UPLOAD_AUTORETRY_OPTIMIZATION){const{response:t,retryCount:r}=yield o.newPromiseWithRetries({promiseToTry:()=>F(this.props.user.id,this.nsIdForRouting(e),e.bytes,s,n)});l+=r,a=t}else{const{response:t,retryCount:r}=yield o.legacyPromiseWithRetries((()=>F(this.props.user.id,this.nsIdForRouting(e),e.bytes,s,n)),3);l+=r,a=t}if(a.isError)throw u.ActionsAdapter.emit("error",{uploadItem:e,errorType:a.error.type,user:this.props.user,errorCode:a.errorCode,errorMessage:a.error.message,errorMethodSource:a.error.method,totalRetryCount:l}),new Error;return u.ActionsAdapter.emit("blockUploadEnd",{blob:s,totalRetryCount:l,uploadItem:e}),a.result.token})),this.oneShotUploadFile=(e,s,r)=>t.__awaiter(this,void 0,void 0,(function*(){const a=Date.now(),l=e.manualRetryCount,d=t=>{r&&r(t.loaded),e.manualRetryCount===l&&u.ActionsAdapter.emit("uploadProgress",{uploadItem:e,requestStartTimestamp:a})};u.ActionsAdapter.emit("blockUploadStart",{blob:s,uploadItem:e});let h=0;const c={path:i.normalize(o.getDestinationDir(e.parentPath||"",e.destPath))+i.normalize(i.filename(e.destPath)),mode:{".tag":"overwrite"}},p=_.getUploadAbortController(),m=p.getAbortSignal(e),{response:f,retryCount:y}=yield o.legacyPromiseWithRetries((()=>function(e,s,r,o,a){var l;return t.__awaiter(this,void 0,void 0,(function*(){const t=new i.UserApiV2Client(new I({onProgress:o,abortSignal:a}));try{const i=yield U(s),o=yield t.ns("files").upload("upload",e,i,{subjectUserId:r});return n.ok(o)}catch(e){return void 0!==(null===(l=e.error)||void 0===l?void 0:l[".tag"])?n.error(e.error,e.raw.status):"aborted"===e.raw.responseBody?n.ok({}):0===e.raw.status?n.error(C,0,{isRetriable:!0,maxRetries:1/0,isNetworkError:!0}):n.error(k,e.raw.status)}}))}(c,s,this.props.user.id,d,m)),3);h+=y;const R=f;if(R.isError){const t=R.error;throw u.ActionsAdapter.emit("error",{uploadItem:e,errorType:t.type,user:this.props.user,errorCode:t.errorCode,errorMessage:t.message,errorMethodSource:t.method,totalRetryCount:h}),new Error}return p.wasUploadAborted(e.destPath)||u.ActionsAdapter.emit("blockUploadEnd",{blob:s,totalRetryCount:h,uploadItem:e}),R.result.id})),this.finishBatch=e=>t.__awaiter(this,void 0,void 0,(function*(){u.ActionsAdapter.emit("filesCommitting",{uploadItems:e.map((e=>e.info))});const t=[],s=[],r=[];let n,a;if(e.forEach((e=>{e.info.cursor&&(s.push({cursor:e.info.cursor,commit:{mode:{".tag":"overwrite"},path:i.normalize(o.getDestinationDir(e.info.parentPath||"",e.info.destPath))+i.normalize(i.filename(e.info.destPath))}}),r.push(e))})),m.UPLOAD_AUTORETRY_OPTIMIZATION){const{response:e,retryCount:t}=yield o.newPromiseWithRetries({promiseToTry:()=>v({entries:s},this.props.user.id)});n=e,a=t}else{const{response:e,retryCount:t}=yield o.legacyPromiseWithRetries((()=>v({entries:s},this.props.user.id)),3);n=e,a=t}if(n.isError){const s=n.errorCode;return e.map((({info:e})=>{u.ActionsAdapter.emit("error",{uploadItem:e,errorCode:s,errorType:o.UploadErrorType.COMMIT_HTTP_ERROR,user:this.props.user,totalRetryCount:a,useBatchCommit:!0}),t.push({filePath:e.destPath,success:!1})})),t}return n.result.entries.forEach(((e,s)=>{const i=r[s];"failure"===e[".tag"]?(u.ActionsAdapter.emit("error",{uploadItem:i.info,errorCode:0,errorType:u.convertApiV2CommitError(e),user:this.props.user,totalRetryCount:a,useBatchCommit:!0}),t.push({filePath:i.info.destPath,success:!1})):(u.ActionsAdapter.emit("fileUploaded",{uploadItem:i.info,totalRetryCount:a,useBatchCommit:!0}),t.push({filePath:i.info.destPath,success:!0}))})),this.dequeuedItemIds.clear(),t})),this.finishOneShotUpload=e=>t.__awaiter(this,void 0,void 0,(function*(){u.ActionsAdapter.emit("filesCommitting",{uploadItems:e.map((e=>e.info))}),e.forEach((e=>{u.ActionsAdapter.emit("fileUploaded",{uploadItem:e.info,totalRetryCount:0,useBatchCommit:!1})}));const t=[];return e.forEach((e=>{t.push({filePath:e.info.destPath,success:!1})})),Promise.resolve(t)})),this.commitBlocksBatchAPIV2=e=>t.__awaiter(this,void 0,void 0,(function*(){if(u.ActionsAdapter.emit("filesCommitting",{uploadItems:e.map((e=>e.info))}),e.length>3){const t=e.map((({info:e,tokens:t})=>({file_name:i.filename(e.destPath),destination:o.getDestinationDir(e.parentPath||"",e.destPath),file_size:e.bytes,block_tokens:t,local_identifier:e.id})));let s,r=0;if(m.UPLOAD_AUTORETRY_OPTIMIZATION){const{response:i,retryCount:n}=yield o.newPromiseWithRetries({promiseToTry:()=>B(this.props.user.id,t,e.map((e=>e.info)))});r+=n,s=i}else{const{response:i,retryCount:n}=yield o.legacyPromiseWithRetries((()=>B(this.props.user.id,t,e.map((e=>e.info)))),3);r+=n,s=i}const n=[];return s.isError?e.map((({info:e,tokens:t})=>{u.ActionsAdapter.emit("error",{uploadItem:e,errorCode:s.error.errorCode,errorType:s.error.type,user:this.props.user,errorMessage:s.error.message,errorMethodSource:s.error.method,totalRetryCount:r,useBatchCommit:!0}),n.push({filePath:e.destPath,success:!1})})):s.result.forEach((e=>{e.status.isError?(u.ActionsAdapter.emit("error",{uploadItem:e.uploadItem,errorCode:0,errorType:e.status.error.type,user:this.props.user,errorMessage:e.status.error.message,errorMethodSource:e.status.error.method,totalRetryCount:r,useBatchCommit:!0}),n.push({filePath:e.uploadItem.destPath,success:!1})):(u.ActionsAdapter.emit("fileUploaded",{uploadItem:e.uploadItem,totalRetryCount:r,useBatchCommit:!0}),n.push({filePath:e.uploadItem.destPath,success:!0}))})),Promise.resolve(n)}{const t=[];for(const{info:s,tokens:r}of e){let e,n=0;if(m.UPLOAD_AUTORETRY_OPTIMIZATION){const{response:t,retryCount:a}=yield o.newPromiseWithRetries({promiseToTry:()=>O(this.props.user.id,o.getDestinationDir(s.parentPath||"",s.destPath),i.filename(s.destPath),s.bytes,r,this.props.user.root_ns_id,x(s))});n+=a,e=t}else{const{response:t,retryCount:a}=yield o.legacyPromiseWithRetries((()=>O(this.props.user.id,o.getDestinationDir(s.parentPath||"",s.destPath),i.filename(s.destPath),s.bytes,r,this.props.user.root_ns_id,x(s))),3);n+=a,e=t}e.isError?(u.ActionsAdapter.emit("error",{uploadItem:s,errorCode:e.errorCode,errorType:e.error.type,user:this.props.user,errorMessage:e.error.message,errorMethodSource:e.error.method,totalRetryCount:n,useBatchCommit:!0}),t.push({filePath:s.destPath,success:!1})):(u.ActionsAdapter.emit("fileUploaded",{uploadItem:s,totalRetryCount:n,useBatchCommit:!0}),t.push({filePath:s.destPath,success:!0}))}return Promise.resolve(t)}}))}render(){this.appendBlock,this.finishBatch,this.onUploadItemDequeue;const e={schedulerType:"hybrid",scheduler:M,append:this.appendBlock,finish:this.finishBatch,uploadBlock:this.uploadBlock,commitBlocksBatch:this.commitBlocksBatchAPIV2,onUploadItemDequeue:this.onUploadItemDequeue},t={schedulerType:"hybrid",scheduler:L,append:this.appendBlock,finish:this.finishBatch,uploadBlock:this.oneShotUploadFile,commitBlocksBatch:this.finishOneShotUpload,onUploadItemDequeue:this.onUploadItemDequeue},r={schedulerType:"token",scheduler:N,uploadBlock:this.uploadBlock,commitBlocksBatch:this.commitBlocksBatchAPIV2,onUploadItemDequeue:this.onUploadItemDequeue},i=o.shouldUseHybridUploader()?o.shouldUseHybridUploaderUnder64mb()?t:e:r;return s.React$1.createElement(c.UploadProvider,{userId:this.props.user.id,selectMultiple:!0,onChoose:this.props.onChoose,onChooseDropboxFile:this.props.onChooseDropboxFile,processFiles:this.processFiles,maxFileSize:o.shouldUseHybridUploader()?375809638400:524288e5,startUploadOnAdd:!0,scheduler:i},this.props.children)}}Y.displayName="UploadKitProvider",e.UploadKitProvider=Y}));
//# sourceMappingURL=c_file_uploader_upload_kit_provider.js-vflGJsmdP.map
