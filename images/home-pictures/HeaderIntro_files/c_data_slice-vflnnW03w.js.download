define(["exports","./c_tslib","./e_ui_page_files_router","./c_file_uploader_utils","./c_core_uri","./e_core_exception"],(function(e,t,s,a,i,o){"use strict";class l{constructor(e){this.teamAccessLevelsDefinition=e||[]}hasDefinitions(){return!!this.teamAccessLevelsDefinition.length}addTeamAccessLevel(e,t){const s=this.teamAccessLevelsDefinition.filter((t=>t.path!==e));return new l([...s,{path:e,accessLevel:t}])}getTeamAccessLevel(e){if(!this.teamAccessLevelsDefinition.length)return null;const t=this.teamAccessLevelsDefinition.reduce(((t,a)=>{const i=s.inSubDirectory(a.path,e)||s.paths_are_equal(a.path,e);if(!t)return i?a:null;const o=s.normalize(t.path),l=s.normalize(a.path),r=o.length<l.length;return i&&r?a:t}),null);return t?t.accessLevel:null}}const r={path:"/",hasPermissionToUploadToFolder:!0,folderNsId:null,user:s.getActiveUser(),fileList:s.immutable.exports.OrderedMap(),sortedUploadIds:[],numDraggingFiles:0,isActive:!1,currentlyActiveDropzone:"",currentlyActivePersistentDropzone:"",isInternalTransfer:!1,isMovingIntoVault:!1,isPermissionsAtUploadModalOpen:!1,numSecondsLeft:0,currentFileNumSecondsLeft:0,confirmedFSWs:[],confirmedFSWBatchIds:[],hasOverquotaError:!1,allUploadsComplete:!1,teamAccessLevelsDefinition:new l,targetSurface:"none",overQuotaStatus:a.OverQuotaStatusType.NONE,uploadModalType:null,lastFileUploadMethod:"upm",shouldSuppressNextPermissionAtUploadWarning:!1,uiExpanded:!1,uiDismissed:!1},d=e=>s.getStateAtNamespace(e,s.UPLOAD_NAMESPACE_KEY)||r,n=e=>d(e).fileList,u=s.createSelector$1(n,(e=>d(e).sortedUploadIds),((e,t)=>t.map((t=>e.get(t))))),p=e=>d(e).user,c=s.createSelector$1(n,(e=>e.find((e=>e.status===a.FileStatusType.PENDING)))),f=s.createSelector$1(n,(e=>e.some((e=>e.status===a.FileStatusType.UPLOADING||e.status===a.FileStatusType.PENDING)))),m=s.createSelector$1(n,(e=>e.filter((e=>e.status===a.FileStatusType.UPLOADING||e.status===a.FileStatusType.PENDING)))),g=s.createSelector$1(n,(e=>e.filter((e=>e.status===a.FileStatusType.FAILED||e.status===a.FileStatusType.CANCELLED)))),L=s.createSelector$1(n,(e=>e.filter((e=>e.status===a.FileStatusType.CANCELLING)))),S=s.createSelector$1(n,(e=>e.size>0)),y=e=>e.status===a.FileStatusType.FAILED||e.statusBeforeRetry===a.FileStatusType.FAILED,A=e=>{const t=[],s=[],i=[];return e.forEach((e=>{(e=>e.status===a.FileStatusType.CANCELLING||e.status===a.FileStatusType.CANCELLED||e.statusBeforeRetry===a.FileStatusType.CANCELLED)(e)||y(e)?y(e)?s.push(e.uploadId):i.push(e.uploadId):t.push(e.uploadId)})),[...t,...s,...i]},T=s.createAsyncThunk("UPLOAD/fetchQuotaUpsell",((e,a)=>t.__awaiter(void 0,void 0,void 0,(function*(){const e=a.getState(),t=p(e);return yield s.SilentBackgroundRequest$1({url:"/get_info_for_quota_upsell",data:{_subject_uid:t.id}})})))),U=s.createSlice({name:"UPLOAD",initialState:r,reducers:{setUiDismissed(e,{payload:t}){e.uiDismissed=t},setUiExpanded(e,{payload:t}){e.uiExpanded=t},setUser(e,{payload:t}){t&&(e.user=t)},setPath(e,{payload:t}){const{path:s,hasPermissionToUploadToFolder:a=!0,isMovingIntoVault:i=!1,targetSurface:o="none"}=t;e.path=s,e.hasPermissionToUploadToFolder=a,e.isMovingIntoVault=i,e.targetSurface=o},setFolderNsId(e,{payload:t}){e.folderNsId=t},setHasOverquotaError(e,{payload:t}){e.hasOverquotaError=t},addTeamLevelAccess(e,{payload:t}){e.teamAccessLevelsDefinition=e.teamAccessLevelsDefinition.addTeamAccessLevel(t.path,t.accessLevel)},resetTeamAccessLevel(e){e.teamAccessLevelsDefinition=new l},queueUploads(e,{payload:t}){const a={};for(const e of t)a[e.uploadId]=e;e.fileList=s.immutable.exports.OrderedMap(a).merge(e.fileList),e.sortedUploadIds=[...t.map((e=>e.uploadId)),...e.sortedUploadIds]},readyUploads(e,{payload:t}){for(const s of t)e.fileList=e.fileList.update(s.uploadId,(e=>e.set("status",a.FileStatusType.PENDING)))},resetUploadProgress(e,{payload:t}){t.forEach((t=>{e.fileList=e.fileList.update(t.uploadId,(e=>e.set("percentUploaded",0).set("numSecondsLeft",0).set("statusBeforeRetry",e.status).set("status",a.FileStatusType.PENDING)))}))},setUploadsCancelling(e,{payload:t}){for(const s of t)e.fileList=e.fileList.update(s.uploadId,(e=>e.status===a.FileStatusType.SET_PERMISSIONS||e.status===a.FileStatusType.PENDING||e.status===a.FileStatusType.UPLOADING?e.set("status",a.FileStatusType.CANCELLING):e));e.sortedUploadIds=A(e.fileList)},cancelUploads(e,{payload:t}){for(const s of t)e.fileList=e.fileList.update(s.uploadId,(e=>e.status===a.FileStatusType.CANCELLING?e.set("status",a.FileStatusType.CANCELLED):e));e.sortedUploadIds=A(e.fileList)},startUpload(e,{payload:t}){const{file:s}=t;i.assert(null!=s,"missing file to upload"),i.assert(e.fileList.has(s.uploadId),"failed to find file in file list");e.fileList.get(s.uploadId)&&(e.fileList=e.fileList.update(s.uploadId,(e=>e.set("status",a.FileStatusType.UPLOADING))),e.allUploadsComplete=!1,e.shouldSuppressNextPermissionAtUploadWarning=!1)},completeUpload(e,{payload:t}){const{uploadId:s}=t,i=e.fileList.get(s);i&&(i.status!==a.FileStatusType.UPLOADING&&i.status!==a.FileStatusType.PENDING&&o.reportStack("Tried to mark a file upload that is not currently uploading as complete",{exc_extra:{file:i.toString(),fileListLength:e.fileList.count(),uploadId:s}}),e.fileList=e.fileList.update(s,(e=>e.set("status",a.FileStatusType.COMPLETE))))},handleUploadError(e,{payload:t}){const{uploadId:s,errorType:i,errorMessage:o}=t,l=e.fileList.get(s);l&&(e.fileList=e.fileList.update(l.uploadId,(e=>e.set("status",a.FileStatusType.FAILED).set("errorType",i).set("errorMessage",o)))),e.sortedUploadIds=A(e.fileList)},setNumDraggingFiles(e,{payload:t}){const{numDraggingFiles:s,isInternalTransfer:a=!1}=t;e.numDraggingFiles=s,e.isInternalTransfer=a},setIsPermissionsAtUploadModalOpen(e,{payload:t}){e.isPermissionsAtUploadModalOpen=t},setDropzoneActive(e,{payload:t}){const{isActive:s}=t;e.isActive=s},setDraggedPersistentDropzone(e,{payload:t}){const{activeDropzone:s}=t;e.currentlyActivePersistentDropzone=s},clearDraggedPersistentDropzone(e){e.currentlyActivePersistentDropzone=""},clearDraggedOuterDropzone(e){e.currentlyActiveDropzone=""},setCurrentlyDraggedOuterDropzone(e,{payload:t}){const{activeDropzone:s}=t;e.currentlyActiveDropzone=s},addNewFailedFile(e,{payload:t}){const{file:s,errorType:i,errorMessage:o}=t;let l=s;null==l.uploadId&&(l=l.set("uploadId",a.generateUploadId())),l=l.set("status",a.FileStatusType.FAILED).set("errorType",i).set("errorMessage",o),e.fileList=e.fileList.set(l.uploadId,l),e.sortedUploadIds=A(e.fileList)},confirmFSW(e,{payload:t}){const{fswIds:s,batchId:a}=t;s.forEach((t=>{e.confirmedFSWs.includes(t)||e.confirmedFSWs.push(t)})),a&&!e.confirmedFSWBatchIds.includes(a)&&e.confirmedFSWBatchIds.push(a)},setUploadProgress(e,{payload:t}){const{uploadId:s,percentComplete:i,numSecondsLeft:o,secondsLeftForFile:l}=t;if(s){if(e.fileList=e.fileList.update(s,(e=>e.set("percentUploaded",i))),void 0!==o&&(e.numSecondsLeft=o),i>0&&i<100){const t=e.fileList.get(s);t&&t.status!==a.FileStatusType.FAILED&&t.status!==a.FileStatusType.CANCELLED&&t.status!==a.FileStatusType.CANCELLING&&(e.fileList=e.fileList.update(s,(e=>e.set("status",a.FileStatusType.UPLOADING))))}l&&(e.fileList=e.fileList.update(s,(e=>e.set("numSecondsLeft",l))))}},setUploadModalType(e,{payload:t}){e.uploadModalType=t},setLastFileUploadMethod(e,{payload:t}){e.lastFileUploadMethod=t},suppressNextPermissionAtUploadWarning(e){e.shouldSuppressNextPermissionAtUploadWarning=!0}},extraReducers:e=>{e.addCase(T.fulfilled,((e,t)=>{try{const o=JSON.parse(t.payload),l={userQuotaUsageRatio:o.user_quota_usage_ratio,tsdQuotaUsageRatio:o.tsd_quota_usage_ratio,inExcludedNses:o.in_excluded_nses,promptAdminToUpgradeEmailTemplateUrl:o.prompt_admin_to_upgrade_email_template_url,numTeamMembers:o.num_team_members,numTeamAdmins:o.num_team_admins,teamAdminEmail:o.team_admin_email,teamAdminFname:o.team_admin_fname};e.overQuotaDetails=l,e.overQuotaStatus=function({path:e,user:t,tsdQuotaUsageRatio:o,inExcludedNses:l,userQuotaUsageRatio:r}){if(i.assert(null!=t,"user is null"),t.paid||l)return a.OverQuotaStatusType.NONE;if("personal"===t.role){if(r>1)return a.OverQuotaStatusType.BASIC_OVER_QUOTA;if(r>.9)return a.OverQuotaStatusType.BASIC_NEAR_QUOTA}if(t.is_team&&s.Viewer.get_viewer().team_is_limited){const s=t.cdm_tmf_path;if(!t.is_cdm_member||s&&e.startsWith(s)){if(r>1)return a.OverQuotaStatusType.LIMITED_TEAM_USER_OVER_QUOTA}else if(o>1)return a.OverQuotaStatusType.LIMITED_TEAM_TSD_OVER_QUOTA}if(t.is_team&&s.Viewer.get_viewer().team_is_locked)return a.OverQuotaStatusType.LOCKED_TEAM_USER_OVER_QUOTA;return a.OverQuotaStatusType.NONE}({user:e.user,path:e.path,tsdQuotaUsageRatio:l.tsdQuotaUsageRatio,inExcludedNses:l.inExcludedNses,userQuotaUsageRatio:l.userQuotaUsageRatio})}catch(e){o.reportException({err:e,severity:"non-critical",exc_extra:{data:t.payload}})}}))}});const I=U.actions,{reducer:D}=U;var _=Object.freeze({__proto__:null,fetchQuotaUpsell:T,uploadActionCreators:I,reducer:D});e.fetchQuotaUpsell=T,e.getCancellingUploads=L,e.getConfirmedFSWBatchIds=e=>d(e).confirmedFSWBatchIds,e.getConfirmedFSWs=e=>d(e).confirmedFSWs,e.getCurrentlyActiveOuterDropzone=e=>d(e).currentlyActiveDropzone,e.getCurrentlyActivePersistentDropzone=e=>d(e).currentlyActivePersistentDropzone,e.getFailedOrCanceledUploads=g,e.getFileList=n,e.getFilesForBatch=(e,t)=>n(e).filter((e=>e.batchId===t)),e.getFolderNsId=e=>d(e).folderNsId,e.getIsDraggingFiles=e=>d(e).numDraggingFiles>0,e.getIsDropzoneActive=e=>d(e).isActive,e.getIsUploadModalOpen=e=>null!==d(e).uploadModalType,e.getLastFileUploadMethod=e=>d(e).lastFileUploadMethod,e.getNextUpload=c,e.getNumDraggingFiles=e=>d(e).numDraggingFiles,e.getNumSecondsLeft=e=>d(e).numSecondsLeft,e.getOverQuotaDetails=e=>d(e).overQuotaDetails,e.getOverQuotaStatus=e=>d(e).overQuotaStatus,e.getPath=e=>d(e).path,e.getPendingUploads=m,e.getShouldSuppressNextPermissionAtUploadWarning=e=>d(e).shouldSuppressNextPermissionAtUploadWarning,e.getSortedUploads=u,e.getTargetSurface=e=>d(e).targetSurface,e.getTeamAccessLevel=(e,t)=>d(e).teamAccessLevelsDefinition.getTeamAccessLevel(t),e.getTeamAccessLevelsDefinition=e=>d(e).teamAccessLevelsDefinition,e.getUiCanShow=S,e.getUiDismissed=e=>d(e).uiDismissed,e.getUiExpanded=e=>d(e).uiExpanded,e.getUploadById=(e,t)=>{let s;return t&&(s=n(e).get(t)),s},e.getUploadModalType=e=>d(e).uploadModalType,e.getUser=p,e.hasPermissionToUploadToFolder=e=>d(e).hasPermissionToUploadToFolder,e.isInternalTransfer=e=>d(e).isInternalTransfer,e.isMovingIntoVault=e=>d(e).isMovingIntoVault,e.isPermissionsAtUploadModalOpen=e=>d(e).isPermissionsAtUploadModalOpen,e.isUploadCancelled=(e,t)=>{const s=n(e).get(t);return!!s&&s.status===a.FileStatusType.CANCELLED},e.isUploadInProgress=f,e.reducer=D,e.slice_esnext=_,e.uploadActionCreators=I}));
//# sourceMappingURL=c_data_slice.js-vflK451DK.map
