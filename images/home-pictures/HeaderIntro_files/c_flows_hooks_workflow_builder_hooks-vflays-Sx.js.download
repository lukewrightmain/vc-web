define(["exports","./c_tslib","./e_edison","./e_ui_page_files_router","./c_data_action_creators_index","./c_flows_utils_browse_logger","./c_flows_lib_api","./c_flows_redux_selectors","./c_flows_redux_reducer","./c_workflow_builder_workflow_actions_action_ui_config","./c_core_i18n","./c_flows_redux_actions","./c_flows_logging_flows_loggers"],(function(e,o,t,r,a,l,d,i,s,n,c,u,_){"use strict";const g={title:c.intl.formatMessage({id:"vtwwuH",defaultMessage:"files are added to a selected folder"}),type:"file_add",icon:r.FolderLine},m={title:c.intl.formatMessage({id:"5WCvDc",defaultMessage:"a scheduled time elapses"}),type:"scheduled",icon:r.ClockLine};class f{constructor(e){this.category="web-workflow_automation_dashboard",this.referrer=null,this.session_id=null,this.team_id=null,this.user_agent=null,this.user_id=null,this.event_name=e.event_name,this.extra=e.extra,this.timestamp=Date.now(),Object.seal(this)}}const p=["account_menu","account_settings_link","account_settings_embed","web_left_nav_bar","create_snackbar","add_snackbar","pause_snackbar","remove_snackbar","feedback_snackbar","edit_snackbar","reactivate_snackbar"],A=new r.HiveLogger;function S(e){return Object.keys(e).reduce(((o,t)=>{const r=e[t];return"string"==typeof r?o[t]=r:"number"==typeof r||"boolean"==typeof r?o[t]=r.toString():"object"==typeof r&&null!=r&&(o[t]=JSON.stringify(r)),o}),{})}function v(){if("/account/automations"===window.location.pathname)return"account_settings_embed";const e=new URLSearchParams(window.location.search).get("_tk");return null!=e&&(o=e,p.includes(o))?e:null;var o}const E=l.makeAutoFolderModalLogger(((e,o)=>{!function({eventName:e,extra:o}){A.log(new f({event_name:e,extra:S(Object.assign({entrypoint:v()},o))}))}({eventName:e,extra:o})}),["auto_folder_settings_modal_shown","cancel_folder_rules_setting","save_folder_rules_setting","remove_auto_folder_modal_shown","cancel_remove_auto_folder","confirm_remove_auto_folder","auto_folder_modal_shown","cancel_create_automated_folder","confirm_create_automated_folder","confirm_create_automated_folder_error","confirm_create_automated_folder_success","cancel_add_folder_rules","confirm_add_folder_rules","confirm_add_folder_rules_error","confirm_add_folder_rules_success"]),w=e=>{const o=r.useSelector(i.getWorkflowBuilderOperation),t=r.useSelector(i.getWorkflowBuilderSurface),a=r.useSelector(i.getWorkflowBuilderActions),d=r.useSelector(i.getWorkflowBuilderStatus),n=r.useSelector(i.getWorkflowBuilderTrigger),c=r.useSelector(i.getWorkflowBuilderModalSessionId),u=r.useSelector(i.getWorkflowBuilderDashboardActionSource),g=r.useSelector(i.getWorkflowBuilderEntryPoint),m=r.useSelector(i.getWorkflowBuilderInheritable),f=a.length>0?a[0].actionType:void 0,p=null==n?void 0:n.parentFolderNsId,A=null==n?void 0:n.nsId,S=r.mustGetActiveUser().id,v={modalType:o,actionTag:f,triggerType:(null==n?void 0:n.triggerType)||void 0,inheritable:m},w={actionTag:f,triggerType:(null==n?void 0:n.triggerType)||void 0,inheritable:m},k={logCreateAutomatedFolderCommit:()=>{_.PapLogger.logCreateAutoFolderModalFolderCreate({actionSurface:t,modalType:"create"}),_.PapLogger.logInitiateAutoFolderModalUpdateAutomation(v),"dashboard"===t&&E({id:c},"confirm_create_automated_folder",{action_source:u,modal_session_id:c,rule:a[0].actionType})},logCreateAutomatedFolderCommitSuccess:()=>{_.PapLogger.logSucceedAutoFolderModalUpdateAutomation(v),"dashboard"===t?E({id:c},"confirm_create_automated_folder_success",{action_source:u,modal_session_id:c,rule:f,ns_id:p}):l.logAutoFolderModalEvent({id:c},r.WebUserActionLogEvent.CONFIRM_CREATE_AUTOMATED_FOLDER,{file_nsid:p,user_id:S,extra:{entry_point:g,modal_session_id:c,rule_status:"active",rule_type:f,source:t}})},logCreateAutomatedFolderCommitError:e=>{_.PapLogger.logFailAutoFolderModalUpdateAutomation(v),"dashboard"===t?E({id:c},"confirm_create_automated_folder_error",{action_source:u,modal_session_id:c,rule:f,ns_id:p}):l.logAutoFolderModalEvent({id:c},r.WebUserActionLogEvent.CONFIRM_CREATE_AUTOMATED_FOLDER,{user_id:S,extra:{modal_session_id:c,entry_point:g,error:e,rule_type:f,source:t}})},logAddAutomatedFolderCommit:()=>{_.PapLogger.logInitiateAutoFolderModalUpdateAutomation(v),"dashboard"===t&&E({id:c},"confirm_add_folder_rules",{action_source:u,modal_session_id:c,rule:f})},logAddAutomatedFolderCommitSuccess:()=>{_.PapLogger.logSucceedAutoFolderModalUpdateAutomation(v),"dashboard"===t?E({id:c},"confirm_add_folder_rules_success",{action_source:u,modal_session_id:c,rule:f,ns_id:A}):l.logAutoFolderModalEvent({id:c},r.WebUserActionLogEvent.CONFIRM_ADD_FOLDER_RULES,{user_id:S,file_nsid:A,extra:{modal_session_id:c,rule_status:d?"active":"paused",rule_type:f,entry_point:g}})},logAddAutomatedFolderCommitError:e=>{_.PapLogger.logFailAutoFolderModalUpdateAutomation(v),"dashboard"===t?E({id:c},"confirm_add_folder_rules_error",{action_source:u,modal_session_id:c,rule:f,ns_id:A}):l.logAutoFolderModalEvent({id:c},r.WebUserActionLogEvent.CONFIRM_ADD_FOLDER_RULES,{user_id:S,file_nsid:A,extra:{modal_session_id:c,rule_type:f,error:e,entry_point:g}})},logEditAutomatedFolderCommit:()=>{_.PapLogger.logInitiateAutoFolderModalUpdateAutomation(v)},logEditAutomatedFolderCommitSuccess:()=>{_.PapLogger.logSucceedAutoFolderModalUpdateAutomation(v),"dashboard"===t?E({id:c},"save_folder_rules_setting",{action_source:u,modal_session_id:c,isEnabled:d}):l.logAutoFolderModalEvent({id:c},r.WebUserActionLogEvent.FOLDER_RULES_SETTING_MODAL_TOGGLE_CHANGE,{file_nsid:A,user_id:S,extra:{modal_session_id:c,rule_status:d?"active":"paused",rule_type:f,entry_point:g}})},logEditAutomatedFolderCommitError:e=>{_.PapLogger.logFailAutoFolderModalUpdateAutomation(v),"dashboard"===t||l.logAutoFolderModalEvent({id:c},r.WebUserActionLogEvent.FOLDER_RULES_SETTING_MODAL_TOGGLE_CHANGE,{file_nsid:A,user_id:S,extra:{error:e,modal_session_id:c,rule_type:f,entry_point:g}})},logEditAutomatedFolderStatusToggle:e=>{_.PapLogger.logSelectAutoFolderModalStatusToggle(),"dashboard"===t&&E({id:c},"auto_folder_settings_modal_toggle_status",{action_source:u,modal_session_id:c,isEnabled:e})},logRemoveAutomatedFolderInitiate:()=>_.PapLogger.logInitiateAutoFolderModalRemove(w),logRemoveAutomatedFolderError:e=>{_.PapLogger.logFailAutoFolderModalRemove(w),"dashboard"===t||l.logAutoFolderModalEvent({id:c},r.WebUserActionLogEvent.FOLDER_RULES_SETTING_MODAL_DELETE_FOLDER_RULE,{file_nsid:A,user_id:S,extra:{error:e,modal_session_id:c,rule_type:f}})},logRemoveAutomatedFolderSuccess:()=>{_.PapLogger.logSucceedAutoFolderModalRemove(w),"dashboard"===t||l.logAutoFolderModalEvent({id:c},r.WebUserActionLogEvent.FOLDER_RULES_SETTING_MODAL_DELETE_FOLDER_RULE,{file_nsid:A,user_id:S,extra:{modal_session_id:c,rule_type:f}})},logFeedbackFormSuccess:e=>{r.logFolderRuleFeedbackModal({uid:S,feedback_source:e,modal_session_id:c,event_name:r.WebUserActionLogEvent.SUBMIT_FOLDER_RULES_FEEDBACK_MODAL})},logFeedbackFormError:(e,o)=>{r.logFolderRuleFeedbackModal({uid:S,feedback_source:e,modal_session_id:c,event_name:r.WebUserActionLogEvent.SUBMIT_FOLDER_RULES_FEEDBACK_MODAL,error:o})},logAutomatedFolderModalOpen:({surface:e,modalSessionId:o,nsId:t,entryPoint:a,dashboardActionSource:d,source:i})=>{_.PapLogger.logShownAutoFolderModal({actionSurface:e,modalType:i}),"dashboard"===e?E({id:o},"auto_folder_modal_shown",{action_source:d,modal_session_id:o}):l.logAutoFolderModalEvent({id:o},r.WebUserActionLogEvent.AUTOMATED_FOLDER_MODAL_OPEN,{action_source:i,file_nsid:t,user_id:S,extra:{modal_session_id:o,entry_point:a}})},logAutomatedFolderBackClick:o=>{_.PapLogger.logSelectAutoFolderModalPreviousStepButton({actionSurface:t,modalType:e}),"dashboard"===t&&E({id:c},"auto_folder_modal_back_click",{action_source:u,modal_session_id:c,rule:f||null,screen:o})},logAutomatedFolderModalSaveClick:()=>{_.PapLogger.logSelectAutoFolderModalSubmitButton({actionSurface:t,actionTag:f,modalType:e,inheritable:m})},logAutoFolderModalSelect:o=>{_.PapLogger.logSelectAutoFolderModalActionSelect({actionSurface:t,modalType:e,actionTag:o}),"dashboard"===t?E({id:c},"auto_folder_modal_select",{action_source:u,modal_session_id:c,rule:o,ns_id:null!=A?A:p}):l.logAutoFolderModalEvent({id:c},r.WebUserActionLogEvent.AUTOMATED_FOLDER_MODAL_SELECT,{action_source:e,user_id:S,extra:{entry_point:g,rule_selected:o,modal_session_id:c,source:t}})},logChooseFolderConfirmClick:()=>{"dashboard"===t&&("create"===o?E({id:c},"auto_folder_modal_confirm_create",{action_source:u,modal_session_id:c,rule:f||null}):"add"===o&&E({id:c},"auto_folder_modal_confirm_add",{action_source:u,modal_session_id:c,rule:f||null}))},logAutomatedFolderModalCancelClick:()=>{if(_.PapLogger.logDismissAutoFolderModalCancelButton({actionSurface:t,modalType:o}),"dashboard"===t){let e;"create"===o?e="cancel_create_automated_folder":"edit"===o?e="cancel_folder_rules_setting":"add"===o&&(e="cancel_add_folder_rules"),e&&E({id:c},e,{action_source:u,modal_session_id:c})}else{let e;"create"===o?e=r.WebUserActionLogEvent.CANCEL_CREATE_AUTOMATED_FOLDER:"edit"===o?e=r.WebUserActionLogEvent.CANCEL_FOLDER_RULES_SETTING:"add"===o&&(e=r.WebUserActionLogEvent.CANCEL_ADD_FOLDER_RULES),e&&l.logAutoFolderModalEvent({id:c},e,{file_nsid:A,user_id:S,extra:{modal_session_id:c,rule_type:f,entry_point:g}})}},logDashboardAutofolderModalAddClick:()=>{E({id:c},"auto_folder_modal_add_click",{action_source:u,modal_session_id:c})},logDashboardAutofolderModalCreateClick:()=>{E({id:c},"auto_folder_modal_create_click",{action_source:u,modal_session_id:c})},logSavedWorkflowTemplateCancelClick:e=>{_.PapLogger.logSavedWorkflowTemplateCancelButton(e)},logSavedWorkflowTemplateDeleteClick:e=>{_.PapLogger.logSavedWorkflowTemplateDeleteButton(e)},logSavedWorkflowTemplateTrashClick:e=>{_.PapLogger.logSavedWorkflowTemplateDeleteIcon(e)},logSavedWorkflowTemplateInfoClick:()=>{_.PapLogger.logSavedWorkflowTemplateInfoIcon()},logSavedWorkflowTemplateNotNowClick:()=>{_.PapLogger.logSavedWorkflowTemplateNotNowButton()},logSavedWorkflowTemplateOptOutClick:()=>{_.PapLogger.logSavedWorkflowTemplateOptOutCheckbox()},logSavedWorkflowTemplateSaveClick:()=>{const e=s.makeWorkflowTemplate(a);_.PapLogger.logSavedWorkflowTemplateSaveButton(e)},logSavedWorkflowTemplateSaveAsCheckboxClick:()=>{_.PapLogger.logSavedWorkflowTemplateSaveAsCheckbox()},logSavedWorkflowTemplateCardClick:e=>{_.PapLogger.logSavedWorkflowTemplateSavedTemplateCard(s.makeWorkflowTemplate(e.clientWorkflowActions),e.templateId)}};return k};function k(e){const{isValid:t,isExpanded:r,errorMessage:a,triggerType:l}=e,d=o.__rest(e,["isValid","isExpanded","errorMessage","triggerType"]);if(!l)throw new Error("Auto-folder trigger must have triggerType");return Object.assign({triggerType:l},d)}e.useActionUiConfig=function(){const e=r.useSelector(i.getAllowedWorkflowActions),o=r.useSelector(i.getUserExperiments),a=t.react.exports.useMemo((()=>n.getActionUiConfig(e)),[e,o]);return{getUiForAction:t.react.exports.useCallback((e=>a.find((o=>o.type===e))),[a]),uiConfig:a,userExperiments:o}},e.useTriggerUiConfig=function(){const e=r.useSelector(i.getAllowedWorkflowTriggers),o={file_add:g,scheduled:m};return e.map((e=>o[e]))},e.useWorkflowBuilderLogger=w,e.useWorkflowBuilderOnSave=function(){const e=r.useDispatch(),n=r.useSelector(i.getWorkflowBuilderOperation),c=r.useSelector(i.getWorkflowBuilderSurface),_=r.useSelector(i.getWorkflowBuilderActions),g=r.useSelector(i.getWorkflowBuilderStatus),m=r.useSelector(i.getWorkflowBuilderTrigger),f=r.useSelector(i.getWorkflowBuilderApplyToExisting),p=r.useSelector(i.getWorkflowBuilderInheritable),A=w(),S=r.useSelector(i.getSavedWorkflowTemplateVariant),v=r.useSelector(i.getSavedWorkflowTemplateName),E=r.useSelector(i.getSavedWorkflowTemplateCheckboxState),F=t.react.exports.useCallback((t=>o.__awaiter(this,void 0,void 0,(function*(){var o,i,n,_;if(!m||!m.triggerType)throw new Error("Auto-folder trigger not configured");const{parentFolderFqPath:g,folderName:f,parentFolderNsId:w}=m;if(!g||!f)throw new Error("Folder name or parent fqpath not provided");l.showPendingSnackbar({folderName:f,type:"create"});const F=[r.normalize(g),r.normalize(f)].join("");A.logCreateAutomatedFolderCommit();try{yield d.createFolder(F);const o=s.makeFolderRuleSetFromClientWorkflow({actions:t,inheritable:p,isEnabled:!0,trigger:k(m)});if(yield d.updateFolderRules(F,o,!1),A.logCreateAutomatedFolderCommitSuccess(),l.showSuccessSnackbar({folderName:f,shouldShowDashboardCta:"dashboard"!==c,type:"create"}),S&&"A"===S&&E){const o=s.makeWorkflowTemplate(t);yield d.createSavedWorkflowTemplate(o,v),e(u.getSavedWorkflowTemplates()),A.logSavedWorkflowTemplateSaveClick()}if("browse"===c)e(a.setUrl({path:F}));else if("home"===c){const e=r.mustGetActiveUser();r.browserRedirectWrapper(r.browse_uri_for_fq_path(e,F))}e(u.addUserAutomation({actions:t,inheritable:p,fqPath:F,isEnabled:!0,nsId:w,trigger:k(m)}))}catch(e){A.logCreateAutomatedFolderCommitError(null===(o=e.error)||void 0===o?void 0:o[".tag"]);const t="path"===(null===(i=e.error)||void 0===i?void 0:i[".tag"])&&"conflict"===(null===(_=null===(n=e.error)||void 0===n?void 0:n.path)||void 0===_?void 0:_[".tag"]);l.showErrorSnackbar({folderName:f,type:t?"conflict":"generic-create"})}}))),[A,_,e,c,m]),b=t.react.exports.useCallback((t=>o.__awaiter(this,void 0,void 0,(function*(){var o;if(!m||!m.triggerType)throw new Error("Auto-folder trigger not configured");const{folderName:r,fqPath:i,nsId:n}=m;if(!i||!r)throw new Error("Folder fqpath not provided");l.showPendingSnackbar({folderName:r,type:"add"}),A.logAddAutomatedFolderCommit();try{const o=s.makeFolderRuleSetFromClientWorkflow({actions:t,inheritable:p,isEnabled:!0,trigger:k(m)});yield d.updateFolderRules(i,o,f),A.logAddAutomatedFolderCommitSuccess(),l.showSuccessSnackbar({folderName:r,shouldShowDashboardCta:"dashboard"!==c,applyToExistingFiles:f,type:"add"}),"browse"===c&&e(a.setUrl({path:i})),e(u.addUserAutomation({actions:t,inheritable:p,fqPath:i,isEnabled:!0,nsId:n,trigger:k(m)}))}catch(e){A.logAddAutomatedFolderCommitError(null===(o=e.error)||void 0===o?void 0:o[".tag"]),l.showErrorSnackbar({folderName:r,type:"generic-add"})}}))),[A,_,f,e,c,m]),h=t.react.exports.useCallback((t=>o.__awaiter(this,void 0,void 0,(function*(){var o,r;if(!m||!m.triggerType)throw new Error("Auto-folder trigger not configured");const{folderName:a,fqPath:i}=m;if(!i||!a)throw new Error("Folder fqpath not provided");A.logEditAutomatedFolderCommit();try{const e=s.makeFolderRuleSetFromClientWorkflow({actions:t,inheritable:p,isEnabled:g,trigger:k(m)});yield d.updateFolderRules(i,e,f),A.logEditAutomatedFolderCommitSuccess(),l.showSuccessSnackbar({folderName:a,applyToExistingFiles:f,type:"edit"})}catch(e){A.logEditAutomatedFolderCommitError(null===(o=e.error)||void 0===o?void 0:o[".tag"]);const t="no_access"===(null===(r=e.error)||void 0===r?void 0:r[".tag"])?"no-access":"default";l.showErrorSnackbar({folderName:a,type:t})}e(u.editUserAutomation({actions:t,inheritable:p,fqPath:i,isEnabled:!!g,trigger:k(m)}))}))),[A,_,f,e,g,c,m]),T=t.react.exports.useCallback((t=>o.__awaiter(this,void 0,void 0,(function*(){t&&Object.entries(t).forEach((([o,t])=>{e(u.updateWorkflowActionStep(o,{data:t}))}));const o=function(e,o={}){return e.map((e=>{if(e.id in o){const t=Object.assign(Object.assign({},e.data),o[e.id]);return{actionType:e.actionType,data:t}}return{actionType:e.actionType,data:e.data}}))}(_,t);switch(n){case"create":return F(o);case"add":return b(o);case"edit":return h(o);default:return null}}))),[b,F,h,n]);return{saveAutoFolder:T}},e.useWorkflowBuilderRemove=function(){const e=r.useDispatch(),[a,n]=t.react.exports.useState(!1),c=r.useSelector(i.getWorkflowBuilderTrigger),_=r.useSelector(i.getWorkflowBuilderActions),g=r.useSelector(i.getWorkflowBuilderStatus),m=w();return{remove:()=>o.__awaiter(this,void 0,void 0,(function*(){if(!c||!c.fqPath)throw new Error("Auto-folder trigger and its fqPath must exist to be removed.");const o=c.fqPath;n(!0),m.logRemoveAutomatedFolderInitiate();yield d.removeFolderRules(c.fqPath,s.makeFolderRuleSetFromClientWorkflow({actions:_,isEnabled:g,trigger:k(c)})).then((()=>{n(!1),l.showSuccessSnackbar({folderName:r.filename(o),type:"remove"}),m.logRemoveAutomatedFolderSuccess(),e(u.removeUserAutomation(o))}),(e=>{n(!1),l.showErrorSnackbar({type:"default"}),m.logRemoveAutomatedFolderError(e[".tag"])}))})),removeInProgress:a}}}));
//# sourceMappingURL=c_flows_hooks_workflow_builder_hooks.js-vfl7S38hO.map
