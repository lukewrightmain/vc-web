define(["exports","./c_tslib","./e_core_exception","./c_core_exception_info","./e_ui_page_files_router","./e_edison","./c_core_i18n"],(function(e,r,t,o,i,a,n){"use strict";const l={GDrive:{displayName:"Google Drive",importType:{".tag":"gdrive"},signinServiceDisplayName:"Google",profileServicesConstant:i.ProfileServicesConstants.GOOGLE,profileServicesApiServiceType:{".tag":"google"},defaultDestPath:"Google Drive",profileServicesAction:"link_read_files"},OneDrive:{displayName:"Microsoft OneDrive",importType:{".tag":"onedrive"},signinServiceDisplayName:"Microsoft",profileServicesConstant:i.ProfileServicesConstants.OUTLOOK,profileServicesApiServiceType:{".tag":"outlook"},defaultDestPath:"Microsoft OneDrive",profileServicesAction:"access_files_and_wiki"}},s={GotIt:()=>n.intl.formatMessage({id:"j8BdSl",defaultMessage:"Got it"}),TryAgain:()=>n.intl.formatMessage({id:"HImQBL",defaultMessage:"Try again"}),Cancel:()=>n.intl.formatMessage({id:"cp7jer",defaultMessage:"Cancel"}),CloseAriaLabel:()=>n.intl.formatMessage({id:"F4pNeQ",defaultMessage:"Close"}),ViewDetails:()=>n.intl.formatMessage({id:"YPmkDk",defaultMessage:"View details"}),HideDetails:()=>n.intl.formatMessage({id:"p8xGcP",defaultMessage:"Hide details"})};const c="browse",d=e=>{switch(e[".tag"]){case"gdrive":return"google_drive";case"onedrive":return"one_drive"}},p=e=>{switch(e[".tag"]){case"gdrive":return"google_drive";case"onedrive":return"one_drive"}},u=e=>{i.logEvent({class:"file_imports",action:"select",object:"try_again",properties:{actionSurface:c,externalProvider:p(e)}})},v=()=>n.intl.formatMessage({id:"h2PZeS",defaultMessage:"Google"}),g=()=>n.intl.formatMessage({id:"MDiUcD",defaultMessage:"Google Drive"}),f=()=>n.intl.formatMessage({id:"Ur1/IM",defaultMessage:"Microsoft"}),m=()=>n.intl.formatMessage({id:"rfdy2l",defaultMessage:"OneDrive"}),_=()=>n.intl.formatMessage({id:"dObY3n",defaultMessage:"Unknown"}),S=e=>{switch(e[".tag"]){case"gdrive":return g();case"onedrive":return m()}return _()},E=e=>{switch(e[".tag"]){case"gdrive":return v();case"onedrive":return f()}return _()},w=(e,r,o)=>t.reportStack(r,{severity:e,tags:["FileImports"],exc_extra:o,silent:!1}),h={info:(e,r)=>w(o.SEVERITY.OPERATIONAL,e,r),warn:(e,r)=>w(o.SEVERITY.NONCRITICAL,e,r),error:(e,r)=>w(o.SEVERITY.CRITICAL,e,r),uncaught:(e,r)=>w(o.SEVERITY.UNCAUGHT,e,r)};var P,x,y,b;!function(e){e.OpenGdriveFilePicker="OpenGdriveFilePicker"}(P||(P={})),e.FilePickerAction=void 0,(x=e.FilePickerAction||(e.FilePickerAction={})).PICKED="PICKED",x.CANCELED="CANCELED",e.FilePickerViewId=void 0,(y=e.FilePickerViewId||(e.FilePickerViewId={})).DOCS="all",y.FOLDERS="folders",function(e){e.IframeLoaded="IframeLoaded",e.FilePickerResult="FilePickerResult",e.SignInWithDifferentAccount="SignInWithDifferentAccount",e.UnhandledError="UnhandledError",e.UnhandledRejection="UnhandledRejection"}(b||(b={}));i.injectInternalStyle("metaserver/static/js/file_imports/gdrive/file_picker.module.out.css",(e=>"._overlay_g01kv_1{background-color:var(--color__utility__overlay);height:100%;left:0;position:fixed;top:0;transition-delay:0;transition-duration:.333;transition-property:opacity;transition-timing-function:cubic-bezier(.66,0,0,1);width:100%;z-index:10001}"));const F="_overlay_g01kv_1",k=e=>n.intl.formatMessage({id:"ibOvmo",defaultMessage:"Couldnâ€™t get a response from {serviceProvider} servers"},{serviceProvider:E(e)}),C=e=>n.intl.formatMessage({id:"kL19SV",defaultMessage:"You can try again, or download your files and folders from {service} and drag them into Dropbox."},{service:S(e)}),M=({open:e,onRequestClose:r,supportedService:t,tryAgain:o})=>(a.react.exports.useEffect((()=>{var e;e=t.importType,i.logEvent({class:"file_imports",action:"shown",object:"external_api_error",properties:{actionSurface:c,externalProvider:p(e)}})}),[t.importType]),a.React$1.createElement(i.Modal,{onRequestClose:r,open:e,isCentered:!0,withCloseButton:s.CloseAriaLabel()},a.React$1.createElement(i.Modal.Header,{hasBottomSpacing:"title-standard"},a.React$1.createElement(i.Modal.Title,null,k(t.importType))),a.React$1.createElement(i.Modal.Body,{hasVerticalSpacing:!1},a.React$1.createElement(i.Text,{tagName:"p"},C(t.importType))),a.React$1.createElement(i.Modal.Footer,null,a.React$1.createElement(i.Button,{variant:"opacity",onClick:r,autoFocus:!0},s.GotIt()),a.React$1.createElement(i.Button,{variant:"primary",autoFocus:!0,onClick:()=>{r(),o(),u(t.importType)}},s.TryAgain())))),A=(e,r)=>{i.Modal$1.showInstance(a.React$1.createElement(M,{supportedService:e,open:!0,onRequestClose:()=>i.Modal$1.close(),tryAgain:r}))},T=e=>r.__awaiter(void 0,void 0,void 0,(function*(){return new Promise((r=>setTimeout(r,e)))}));let I,D,j,O=null,R=()=>{},L="",N=()=>{};const G="https://file-imports.dropbox.com",U=e=>{var r;O&&(R(e),null===(r=O.parentNode)||void 0===r||r.removeChild(O),window.removeEventListener("message",$),O=null,R=()=>{})},$=t=>r.__awaiter(void 0,void 0,void 0,(function*(){var o;if(!O||t.origin!==G||t.source!==O.contentWindow||!(null===(o=t.data)||void 0===o?void 0:o.hasOwnProperty("eventType")))return;const i=t.data;switch(i.eventType){case b.IframeLoaded:(null==O?void 0:O.contentWindow)&&O.contentWindow.postMessage({eventType:P.OpenGdriveFilePicker,accessToken:L,views:I,rootId:D,title:j,hideSwitchAccountButton:!N},G);break;case b.FilePickerResult:U(i.result);break;case b.SignInWithDifferentAccount:U({action:e.FilePickerAction.CANCELED}),null==N||N();break;case b.UnhandledError:h.warn(`Unhandled error in file picker iframe: ${i.error}`),yield r.__awaiter(void 0,void 0,void 0,(function*(){yield T(500),U({action:e.FilePickerAction.CANCELED}),yield T(50)}));A(l.GDrive,(()=>{V(L,N,I,D,j)}));break;case b.UnhandledRejection:h.warn(`Unhandled rejection in file picker iframe: ${i.error}`)}})),V=(e,r,t,o,i)=>new Promise((a=>{if(O)throw new Error("File picker already open");L=e,N=r,R=a,I=t,D=o,j=i,O=document.createElement("iframe"),O.setAttribute("allowTransparency","true"),O.setAttribute("sandbox","allow-scripts allow-same-origin allow-modals"),O.setAttribute("src",G),O.setAttribute("frameBorder","0"),O.classList.add(F),document.body.appendChild(O),window.addEventListener("message",$)}));e.Buttons=s,e.FileImportsExclog=h,e.SupportedServices=l,e.getLocalizedLoginServiceName=E,e.getLocalizedServiceName=S,e.getSupportedService=e=>{switch(e[".tag"]){case"gdrive":return l.GDrive;case"onedrive":return l.OneDrive}throw new Error(`Bad import type: ${JSON.stringify(e)}`)},e.logCancelImportJob=e=>{i.logEvent({class:"file_imports",action:"cancel",object:"import_job",properties:{actionSurface:c,externalProvider:p(e)}})},e.logFailConnectExternalAccount=e=>{i.logEvent({class:"file_imports",action:"fail",object:"connect_external_account",properties:{actionSurface:c,externalProvider:d(e)}})},e.logPartialSucceedImportJob=({importType:e,srcFilesTotal:r,srcFilesSucceeded:t,srcFilesFailed:o,num4xxErrors:a,num5xxErrors:n,numOtherErrors:l,allErrorCounts:s})=>{i.logEvent({class:"file_imports",action:"partial_succeed",object:"import_job",properties:{actionSurface:c,externalProvider:p(e),srcFilesTotal:r,srcFilesSucceeded:t,srcFilesFailed:o,num_4xxErrors:a,num_5xxErrors:n,numOtherErrors:l,allErrorCounts:s}})},e.logSelectDeleteSource=e=>{i.logEvent({class:"file_imports",action:"select",object:"delete_source",properties:{actionSurface:c,externalProvider:p(e)}})},e.logSelectFolderStructure=e=>{i.logEvent({class:"file_imports",action:"select",object:"folder_structure",properties:{actionSurface:c,externalProvider:p(e)}})},e.logSelectOverquotaUpgrade=e=>{i.logEvent({class:"file_imports",action:"select",object:"overquota_upgrade",properties:{actionSurface:c,externalProvider:p(e)}})},e.logSelectOverwriteFiles=e=>{i.logEvent({class:"file_imports",action:"select",object:"overwrite_files",properties:{actionSurface:c,externalProvider:p(e)}})},e.logSelectTryAgain=u,e.logSelectViewDetails=e=>{i.logEvent({class:"file_imports",action:"select",object:"view_details",properties:{actionSurface:c,externalProvider:p(e)}})},e.logShownFailedCancel=e=>{i.logEvent({class:"file_imports",action:"shown",object:"failed_cancel",properties:{actionSurface:c,externalProvider:p(e)}})},e.logShownImportAlreadyRunning=e=>{i.logEvent({class:"file_imports",action:"shown",object:"import_already_running",properties:{actionSurface:c,externalProvider:p(e)}})},e.logShownImportOptions=e=>{i.logEvent({class:"file_imports",action:"shown",object:"import_options",properties:{actionSurface:c,externalProvider:p(e)}})},e.logShownNetworkError=e=>{i.logEvent({class:"file_imports",action:"shown",object:"network_error",properties:{actionSurface:c,externalProvider:p(e)}})},e.logShownNoFiles=e=>{i.logEvent({class:"file_imports",action:"shown",object:"no_files",properties:{actionSurface:c,externalProvider:p(e)}})},e.logShownOverquotaPrompt=e=>{i.logEvent({class:"file_imports",action:"shown",object:"overquota_prompt",properties:{actionSurface:c,externalProvider:p(e)}})},e.logShownPartialUpload=e=>{i.logEvent({class:"file_imports",action:"shown",object:"partial_upload",properties:{actionSurface:c,externalProvider:p(e)}})},e.logShownUnknownError=e=>{i.logEvent({class:"file_imports",action:"shown",object:"unknown_error",properties:{actionSurface:c,externalProvider:p(e)}})},e.logStartImportJob=e=>{i.logEvent({class:"file_imports",action:"start",object:"import_job",properties:{actionSurface:c,externalProvider:p(e)}})},e.logSucceedConnectExternalAccount=e=>{i.logEvent({class:"file_imports",action:"succeed",object:"connect_external_account",properties:{actionSurface:c,externalProvider:d(e)}})},e.logSucceedImportJob=({importType:e,srcFilesTotal:r,srcFilesSucceeded:t,srcFilesFailed:o,num4xxErrors:a})=>{i.logEvent({class:"file_imports",action:"succeed",object:"import_job",properties:{actionSurface:c,externalProvider:p(e),srcFilesTotal:r,srcFilesSucceeded:t,srcFilesFailed:o,num_4xxErrors:a}})},e.openGdriveFilePicker=V,e.showExternalProviderApiErrorModal=A,e.sleep=T}));
//# sourceMappingURL=c_file_imports_gdrive_file_picker.js-vflCl6xRB.map
